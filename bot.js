const Discord = require('discord.js');
const { Client, Util } = require('discord.js');
const client = new Discord.Client();
const { PREFIX, GOOGLE_API_KEY } = require('./config');
const YouTube = require('simple-youtube-api');
const ytdl = require('ytdl-core');

const youtube = new YouTube(GOOGLE_API_KEY);

const queue = new Map();


client.on('warn', console.warn);

client.on('error', console.error);

client.on('ready', () => console.log('Yo this ready!'));

// client.on('disconnect', () => console.log('I just disconnected, making sure you know, I will reconnect now...'));

// client.on('reconnecting', () => console.log('I am reconnecting now!'));

client.on('message', async msg => { // eslint-disable-line
	if (msg.author.bot) return undefined;
	if (!msg.content.startsWith(PREFIX)) return undefined;

	const args = msg.content.split(' ');
	const searchString = args.slice(1).join(' ');
	const url = args[1] ? args[1].replace(/<(.+)>/g, '$1') : '';
	const serverQueue = queue.get(msg.guild.id);

	let command = msg.content.toLowerCase().split(" ")[0];
	command = command.slice(PREFIX.length)

	if (command === `play`) {
		const voiceChannel = msg.member.voiceChannel;
		if (!voiceChannel) return msg.channel.send('ุฃูุง ุขุณู ูููู ุนููู ุฃู ุชููู ูู ููุงุฉ ุตูุชูุฉ ูุชุดุบูู ุงููุฑุงู!');
		const permissions = voiceChannel.permissionsFor(msg.client.user);
		if (!permissions.has('CONNECT')) {
			return msg.channel.send('ูุง ุฃุณุชุทูุน ุฃู ุฃุชููู ูู ูุฐู ุงูููุงุฉ ุงูุตูุชูุฉุ ุชุฃูุฏ ูู ุฃู ูุฏู ุงูุตูุงุญูุงุช ุงูุงุฒูุฉ !');
		}
		if (!permissions.has('SPEAK')) {
			return msg.channel.send('ูุง ุฃุณุชุทูุน ุฃู ุฃุชููู ูู ูุฐู ุงูููุงุฉ ุงูุตูุชูุฉุ ุชุฃูุฏ ูู ุฃู ูุฏู ุงูุตูุงุญูุงุช ุงูุงุฒูุฉ !');
		}
		if (!permissions.has('EMBED_LINKS')) {
			return msg.channel.sendMessage("**ูุง ููุฌุฏ ูุฏู ุตูุงุญูุงุช `EMBED LINKS`**")
		}

		if (url.match(/^https?:\/\/(www.youtube.com|youtube.com)\/playlist(.*)$/)) {
			const playlist = await youtube.getPlaylist(url);
			const videos = await playlist.getVideos();
			for (const video of Object.values(videos)) {
				const video2 = await youtube.getVideoByID(video.id); // eslint-disable-line no-await-in-loop
				await handleVideo(video2, msg, voiceChannel, true); // eslint-disable-line no-await-in-loop
			}
			return msg.channel.send(` **${playlist.title}** ุชู ุงุถุงูุฉ ุงููุงุฆูู!`);
		} else {
			try {
				var video = await youtube.getVideo(url);
			} catch (error) {
				try {
					var videos = await youtube.searchVideos(searchString, 5);
					let index = 0;
					const embed1 = new Discord.RichEmbed()
			        .setDescription(`**ุงุฎุชุงุฑ ุฑูู ุงูููุทุน** :
${videos.map(video2 => `[**${++index} **] \`${video2.title}\``).join('\n')}`)
					.setFooter("")
					msg.channel.sendEmbed(embed1).then(message =>{message.delete(20000)})
					
					// eslint-disable-next-line max-depth
					try {
						var response = await msg.channel.awaitMessages(msg2 => msg2.content > 0 && msg2.content < 11, {
							maxMatches: 1,
							time: 10000,
							errors: ['time']
						});
					} catch (err) {
						console.error(err);
						return msg.channel.send('ูู ูุชู ุชุญุฏูุฏ ุงูุนุฏุฏ ูุชุดุบูู ุงููุฑุงู.');
					}
					const videoIndex = parseInt(response.first().content);
					var video = await youtube.getVideoByID(videos[videoIndex - 1].id);
				} catch (err) {
					console.error(err);
					return msg.channel.send(':X: ูู ุฃุณุชุทุน ุงูุญุตูู ุนูู ุฃูุฉ ูุชุงุฆุฌ ุจุญุซ.');
				}
			}
			return handleVideo(video, msg, voiceChannel);
		}
	} else if (command === `skip`) {
		if (!msg.member.voiceChannel) return msg.channel.send('You are not in a voice channel!');
		if (!serverQueue) return msg.channel.send('There is nothing playing that I could skip for you.');
		serverQueue.connection.dispatcher.end('Skip command has been used!');
		return undefined;
	} else if (command === `stop`) {
		if (!msg.member.voiceChannel) return msg.channel.send('You are not in a voice channel!');
		if (!serverQueue) return msg.channel.send('There is nothing playing that I could stop for you.');
		serverQueue.songs = [];
		serverQueue.connection.dispatcher.end('Stop command has been used!');
		return undefined;
	} else if (command === `vol`) {
		if (!msg.member.voiceChannel) return msg.channel.send('You are not in a voice channel!');
		if (!serverQueue) return msg.channel.send('There is nothing playing.');
		if (!args[1]) return msg.channel.send(`:loud_sound: Current volume is **${serverQueue.volume}**`);
		serverQueue.volume = args[1];
		serverQueue.connection.dispatcher.setVolumeLogarithmic(args[1] / 5);
		return msg.channel.send(`:speaker: ุชู ุชุบูุฑ ุงูุตูุช ุงูู **${args[1]}**`);
	} else if (command === `np`) {
		if (!serverQueue) return msg.channel.send('ูุง ููุฌุฏ ุดูุก ุญุงูู ู ุงูุนูู.');
		const embedNP = new Discord.RichEmbed()
	.setDescription(`:notes: ุงูุงู ูุชู ุชุดุบูู: **${serverQueue.songs[0].title}**`)
		return msg.channel.sendEmbed(embedNP);
	} else if (command === `queue`) {
		
		if (!serverQueue) return msg.channel.send('There is nothing playing.');
		let index = 0;
		const embedqu = new Discord.RichEmbed()
	.setDescription(`**Songs Queue**
${serverQueue.songs.map(song => `**${++index} -** ${song.title}`).join('\n')}
**ุงูุงู ูุชู ุชุดุบูู** ${serverQueue.songs[0].title}`)
		return msg.channel.sendEmbed(embedqu);
	} else if (command === `pause`) {
		if (serverQueue && serverQueue.playing) {
			serverQueue.playing = false;
			serverQueue.connection.dispatcher.pause();
			return msg.channel.send('ุชู ุฅููุงู ุงููุฑุงู ูุคูุชุง!');
		}
		return msg.channel.send('There is nothing playing.');
	} else if (command === "resume") {
		if (serverQueue && !serverQueue.playing) {
			serverQueue.playing = true;
			serverQueue.connection.dispatcher.resume();
			return msg.channel.send('ุงุณุชุฃููุช ุงููุฑุงู ุจุงููุณุจุฉ ูู !');
		}
		return msg.channel.send('ูุง ููุฌุฏ ุดูุก ุญุงูู ูู ุงูุนูู.');
	}

	return undefined;
});

async function handleVideo(video, msg, voiceChannel, playlist = false) {
	const serverQueue = queue.get(msg.guild.id);
	console.log(video);
	
//	console.log('yao: ' + Util.escapeMarkdown(video.thumbnailUrl));
	const song = {
		id: video.id,
		title: Util.escapeMarkdown(video.title),
		url: `https://www.youtube.com/watch?v=${video.id}`
	};
	if (!serverQueue) {
		const queueConstruct = {
			textChannel: msg.channel,
			voiceChannel: voiceChannel,
			connection: null,
			songs: [],
			volume: 5,
			playing: true 
		};
		queue.set(msg.guild.id, queueConstruct);

		queueConstruct.songs.push(song);

		try {
			var connection = await voiceChannel.join();
			queueConstruct.connection = connection;
			play(msg.guild, queueConstruct.songs[0]);
		} catch (error) {
			console.error(`I could not join the voice channel: ${error}`);
			queue.delete(msg.guild.id);
			return msg.channel.send(`I could not join the voice channel: ${error}`);
		}
	} else {
		serverQueue.songs.push(song);
		console.log(serverQueue.songs);
		if (playlist) return undefined;
		else return msg.channel.send(` **${song.title}** ุชู ุงุถุงูู ุงููุฑุงู ุงูู ุงููุงุฆูุฉ!`);
	}
	return undefined;
}

function play(guild, song) {
	const serverQueue = queue.get(guild.id);

	if (!song) {
		serverQueue.voiceChannel.leave();
		queue.delete(guild.id);
		return;
	}
	console.log(serverQueue.songs);

	const dispatcher = serverQueue.connection.playStream(ytdl(song.url))
		.on('end', reason => {
			if (reason === 'Stream is not generating quickly enough.') console.log('Song ended.');
			else console.log(reason);
			serverQueue.songs.shift();
			play(guild, serverQueue.songs[0]);
		})
		.on('error', error => console.error(error));
	dispatcher.setVolumeLogarithmic(serverQueue.volume / 5);

	serverQueue.textChannel.send(`ุจุฏุก ุชุดุบูู: **${song.title}**`);
}


client.on('guildCreate', guild => {
  client.channels.get("446261667819421708").send(`**Woops new server โ
Server name: __${guild.name}__
Server owner: __${guild.owner}__**`)
});
client.on("guildDelete", guild => {
 client.channels.get("446261667819421708").send(`**Rmoved From server :x:
Server name: __${guild.name}__
Server owner: __${guild.owner}__**`)
});
	    
client.on('message', message => {
  if(message.content === "*bot") {
      const embed = new Discord.RichEmbed()
      .setColor("#00FFFF")
      .setDescription(`**Servers**๐ **__${client.guilds.size}__**
**Users**๐ฅ **__${client.users.size}__**
**Channels**๐ **__${client.channels.size}__** `)
             message.channel.sendEmbed(embed);
         }
});

var adkar = [
  '**ุงุฐูุงุฑ  | **ุงููููููููู ุงููููููู ุจูุญูููุงูููู ุนููู ุญูุฑูุงูููู ููุฃูุบูููููู ุจูููุถููููู ุนูููููู ุณูููุงูู.',
  '**ุงุฐูุงุฑ  |  **ุงููููููููู ุฅููููู ุฃูุณูุฃููููู ุงููููุฏูู ููุงูุชููููู ููุงููุนูููุงูู ููุงููุบูููู. ',
  '**ุงุฐูุงุฑ  โ|  **ุงููููููููู ุงุบูููุฑู ููู ุฐูููุจูู ูููููููุ ุฏููููููุ ููุฌููููููุ ููุฃููููููููุ ููุขุฎูุฑูููุ ููุนูููุงููููุชูููุ ููุณูุฑูููู. ',
  '**โุงุฐูุงุฑ  |  **ุฃุณุชุบูุฑ ุงููู .',
  '**โุงุฐูุงุฑ  | **ุงููููููู ุฃูููุจูุฑู',
  '**โุงุฐูุงุฑ  |  **ููุง ุฅููููู ุฅููููุง ุงูููููู',
  '**ุงุฐูุงุฑ  |  **ุงูู๏ฟฝ๏ฟฝููููู๏ฟฝ๏ฟฝ ุตูููู ุนูููู ููุญููููุฏู ููุนูููู ุขูู ููุญููููุฏู ููููุง ุตููููููุชู ุนูููู ุฅูุจูุฑูุงููููู , ููุนูููู ุขูู ุฅูุจูุฑูุงููููู ุฅูููููู ุญููููุฏู ููุฌููุฏู , ุงููููููููู ุจูุงุฑููู ุนูููู ููุญููููุฏู ููุนูููู ุขูู ููุญููููุฏู ููููุง ุจูุงุฑูููุชู ุนูููู ุฅูุจูุฑูุงููููู ููุนูููู ุขูู ุฅูุจูุฑูุงููููู ุฅูููููู ุญููููุฏู ููุฌููุฏู.',
  '**ุงุฐูุงุฑ  |  **ุณูุจูุญูุงูู ุงูููููููุ ููุงููุญูููุฏู ูููููููุ ููููุง ุฅููููู ุฅููููุง ุงูููููููุ ููุงููููููู ุฃูููุจูุฑู',
  '**ุงุฐูุงุฑ  | **ููุง ุฅููู ุฅููุง ุงูููู ููุญูุฏููู ููุง ุดูุฑูููู ููููุ ูููู ุงูููููููู ูููููู ุงููุญูููุฏู ูููููู ุนูููู ููููู ุดูููุกู ููุฏููุฑู.',
  '**ุงุฐูุงุฑ  | **ุฃุณูุชูุบูููุฑู ุงูููู ููุฃุชููุจู ุฅูููููู',
  '**โุงุฐูุงุฑ  | **ุณูุจูุญูุงูู ุงูููู ููุจูุญููููุฏููู. ',
  'โ**ุงุฐูุงุฑ**|  ููุง ุฅููู ุฅููุง ุงูููู ููุญูุฏููู ููุง ุดูุฑูููู ููููุ ูููู ุงูููููููู ูููููู ุงููุญูููุฏู ูููููู ุนูููู ููููู ุดูููุกู ููุฏููุฑู.',
  '**ุงุฐูุงุฑ  โ|   **ุงููููููููู ุฅููููู ุฃูุณูุฃููููู ุนูููููุง ููุงููุนูุงุ ููุฑูุฒูููุง ุทููููุจูุงุ ููุนูููููุง ููุชูููุจููููุง.',
  '**ุงุฐูุงุฑ  | โ **ููุง ุฑูุจูู , ูููู ุงููุญูููุฏู ููููุง ููููุจูุบูู ููุฌูููุงูู ููุฌููููู , ููููุนูุธูููู ุณูููุทูุงูููู.',
  'ุงุฐูุงุฑ    |  **ุฃุณูุชูุบูููุฑู ุงูููู ุงูุนูุธูููู ุงูููุฐูู ูุงู ุฅูููู ุฅูุงูู ููููุ ุงูุญูููู ุงูููููููููุ ููุฃุชููุจู ุฅููููู.**',
  '**โุงุฐูุงุฑ  |  **ุงููููููููู ุฅููููุง ููุนููุฐู ุจููู ูููู ุฃููู ููุดูุฑููู ุจููู ุดูููุฆูุง ููุนููููููู ุ ููููุณูุชูุบูููุฑููู ููููุง ููุง ููุนููููููู.',
  '**โุงุฐูุงุฑ  |  **ุงููููููููู ุตูููู ููุณูููููู ููุจูุงุฑููู ุนูู ููุจููููููุง ููุญูููุฏ. ',
  '**โุงุฐูุงุฑ  |  **ุฃูุนููุฐู ุจูููููููุงุชู ุงููููู ุงูุชููุงูููุงุชู ูููู ุดููุฑูู ูุง ุฎููููู.',
  '**ุงุฐูุงุฑ  |  **ููุง ุญูููู ููุง ููููููู ุจูุฑูุญูููุชููู ุฃุณูุชูุบููุซู ุฃุตูููุญู ููู ุดูุฃููู ููููููู ูููุงู ุชูููููููู ุฅููู ููููุณูู ุทููุฑูููุฉู ุนููููู. ',
  '**ุงุฐูุงุฑ  |  **ุงููููููููู ุฅููููู ุฃูุนููุฐู ุจููู ูููู ุงููููููุฑ ุ ููุงููููููุฑ ุ ููุฃูุนููุฐู ุจููู ูููู ุนูุฐุงุจู ุงููููุจูุฑ ุ ูุง ุฅููู ุฅูุงู ุฃููููุชู.',
  '**โุงุฐูุงุฑ  |  **ุงููููููููู ุนุงููููู ูู ุจูุฏูููู ุ ุงููููููููู ุนุงููููู ูู ุณููููุนู ุ ุงููููููููู ุนุงููููู ูู ุจูุตููุฑู ุ ูุง ุฅููู ุฅูุงู ุฃููููุชู.',
  '**โุงุฐูุงุฑ  |  **ุณูุจูุญูุงูู ุงูููู ููุจูุญููููุฏููู ุนูุฏูุฏู ุฎููููููู ุ ููุฑูุถูุง ููููุณููู ุ ููุฒููููุฉู ุนููุฑูุดููู ุ ูููููุฏุงุฏู ููููููุงุชููู. ',
  '**โุงุฐูุงุฑ  |  **ุงููููููููู ุจููู ุฃูุตููุจูุญููุง ููุจููู ุฃูููุณููููุง ุ ููุจููู ููุญูููุง ููุจููู ููููููุชู ููุฅูููููููู ุงูููููุดููุฑ.',
  '**โุงุฐูุงุฑ  |  **ุจูุณููู ุงูููู ุงูุฐู ูุง ููุถููุฑูู ููุนู ุงุณููููู ุดููุกู ูู ุงูุฃุฑูุถู ูููุง ูู ุงูุณูููุงุกู ูููููู ุงูุณููููุนู ุงูุนููููู. ',
  '**โุงุฐูุงุฑ  |  **ุญูุณูุจูููู ุงููููู ูุง ุฅููู ุฅูุงู ูููู ุนููููููู ุชููููููููุชู ูููููู ุฑูุจูู ุงูุนูุฑูุดู ุงูุนูุธููู.',
  '**ุงุฐูุงุฑ  |  **ุงููููููููู ูุง ุฃูุตูุจูููุญู ุจู ููููู ููุนููููุฉู ุฃูู ุจูุฃูุญููุฏู ููููู ุฎููููููู ุ ููููููููู ููุญููุฏููู ูุง ุดุฑููู ูููู ุ ููููููู ุงููุญููููุฏู ููููููู ุงูุดูููููุฑ.',
  '**โุงุฐูุงุฑ  |  **ุงููููููููู ุฅูููููู ุฃูุตูุจููุญูุชู ุฃูุดููููุฏูู ุ ููุฃูุดููููุฏู ุญููููููุฉู ุนููุฑูุดููู ุ ููููููุงุฆูููุชููู ุ ููุฌููููุนู ุฎููููููู ุ ุฃููููููู ุฃููููุชู ุงูููู ูุง ุฅููู ุฅูุงู ุฃููููุชู ููุญููุฏููู ูุง ุดูุฑููู ูููู ุ ููุฃูููู ู ููุญููููุฏุงู ุนูุจููุฏููู ููุฑูุณูููููู',
  '**โุงุฐูุงุฑ  |  **ุฑูุถููุชู ุจูุงูููู ุฑูุจูููุงู ููุจูุงูุฅุณููุงูู ุฏูููุงู ููุจูููุญูููููุฏู ุตูู ุงููู ุนููู ูุณูู ููุจููููุงู',
  '**โุงุฐูุงุฑ  |  **ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุงูุนุฌุฒุ ูุงููุณูุ ูุงูุฌุจูุ ูุงูุจุฎูุ ูุงููุฑูุ ูุนุฐุงุจ ุงููุจุฑุ ุงูููู ุขุช ููุณู ุชููุงูุงุ ูุฒููุง ุฃูุช ุฎูุฑ ูู ุฒูุงูุง. ุฃูุช ููููุง ููููุงูุง. ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุนูู ูุง ูููุนุ ููู ููุจ ูุง ูุฎุดุนุ ููู ููุณ ูุง ุชุดุจุนุ ููู ุฏุนูุฉ ูุง ูุณุชุฌุงุจ ููุง',
  '**โุงุฐูุงุฑ  |  **ุงูููู ุฅูู ุฃุนูุฐ ุจู ูู ุดุฑ ูุง ุนููุชุ ููู ุดุฑ ูุง ูู ุฃุนูู',
  '**โุงุฐูุงุฑ  |  **ุงูููู ูุตุฑู ุงููููุจ ุตุฑู ูููุจูุง ุนูู ุทุงุนุชู',
];
client.on('message', message => {
  if (message.author.bot) return;
  if (message.content.startsWith('*ุงุฐูุงุฑ')) {
    if(!message.channel.guild) return;
  var client= new Discord.RichEmbed()
  .setTitle("ุงุฐูุงุฑ")
  .setThumbnail(message.author.avatarURL)
  .setColor('RANDOM')
  .setDescription(`${adkar[Math.floor(Math.random() * adkar.length)]}`)
                 .setTimestamp()
  message.channel.sendEmbed(client);
  message.react("๐")
  }
  });


client.on('message' , message => { 
    var prefix = "**-";
     if (message.content === prefix + "servers") {

if(!message.channel.guild) return;
  if(message.content < 1023) return
  const Embed11 = new Discord.RichEmbed()
.setAuthor(client.user.username,client.user.avatarURL)
.setThumbnail(client.user.avatarURL)
.setDescription(`***ุงูุณูุฑูุฑุงุช ุงูููุฌูุฏุฉ ููู ุงูุจูุช ${client.guilds.size} \n \n${client.guilds.map(guilds => `- ${guilds.name}`).join('\n')}***`)
         message.channel.sendEmbed(Embed11)
    }
});

client.on('message', message => {
        if (message.content === "*inv") {
            if(!message.channel.guild) return;
        let embed = new Discord.RichEmbed()
        .setAuthor(` ${message.author.username} `, message.author.avatarURL)      
        .setTitle(`ุงุถุบุท ููุง `)
        .setURL(`https://discordapp.com/oauth2/authorize?client_id=440816418381103105&permissions=8&scope=bot`)
        .setThumbnail(" https://cdn.discordapp.com/avatars/377904849783750667/6c76e412f18c142dfd711d05fb363869.png?size=2048")        
     message.channel.sendEmbed(embed);
       }
   });

client.on('message', message => {
     if (message.content === "*support") {
     let embed = new Discord.RichEmbed()
  .setAuthor(message.author.username)
  .setColor("#9B59B6")
  .addField(" ** :gear: Server Support :gear: **" , "  **https://discord.gg/3WYTPsq**")
     
     
  message.channel.sendEmbed(embed);
    }
});

client.on('message', message => {
    if (message.content === '*help') {
   var embed = new Discord.RichEmbed()
        .setTitle('ุชู ุงุฑุณุงู ุฌููุน ุงูุงูุงูุฑ ุนูู ุงูุฎุงุต ,, :e_mail: ')
        .setColor('RED')
       message.channel.sendEmbed(embed)
    }
});

client.on('ready', function(){	
    var ms = 40000 ;	
    var setGame = ['*help','*inv'];	
    var i = -1;	
    var j = 0;	
    setInterval(function (){	
        if( i == -1 ){	
j = 1;	
       }	
        if( i == (setGame.length)-1 ){	
            j = -1;	
      }	
       i = i+j;	
        client.user.setGame(setGame[i],`http://www.youtube.com/gg`);	
}, ms);	
	
});

client.on('message', message => {
	var prefix ="*";
if (message.content.startsWith(prefix + 'help')) {
  var embed = new Discord.RichEmbed() 
      .setColor("#ffff00")
      .setThumbnail(message.author.avatarURL)
      .setDescription(`
โ โฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌ โ
     ๐ุงูุงูุฑ ุนุงูุฉ ๐
*ุงุฐูุงุฑ

*support | ุงุฐุง ูููุช ุงู ุบูุท ุงุฏุฎู ุงูุณูุฑูุฑ ูุญุชู ูุตูุญู 

https://discord.gg/EvwSx6p

ุฌุงุฑู ุงุถุงูุฉ ุจุนุถ ุงูุงุดูุงุก
โ โฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌ โ 
        **ุงูุงูุฑ ุชุดุบูู ุงููุฑุงู**  

*play <name> | ูุชุดุบูู ุงููุฑุงู

*stop | ูุชูููู ุงููุฑุงู ูุฎุฑูุฌ ุงูุจูุช ูู ุงูุฑููู 

*skip | ูุชุฎุทู ุงููุฑุงู
 
*vol number | ูุชุบููุฑ ุงูุตูุช 

*pause | ุงููุงู ุจุดูู ูููุช

*resume | ุชูููู ุงููุฑุงู 

*np | ููุนุฑู ุงู ุณูุฑุฉ ูุดุชุบูุฉ

*queue | ููุนุฑูุฉ ุงูุณูุฑ ุงูุงุฎุฑู ุงูุชู ุทูุจุชูุง 

โ โฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌ โ
ุงููุฑุฌู ุนุฏู ุชุดุบูู ุงูููุณููู ูู ูุฐุง ุงูุจูุช
โ โฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌโฌ โ
`)
  message.author.sendEmbed(embed)

}
});

client.on('ready', () => {
	console.log('I am ready!'); 
  })
// THIS  MUST  BE  THIS  WAY
client.login(process.env.BOT_TOKEN);
